// This file is automatically generated by /Website/scripts/build.js
// To update it, run `deno task build`.

Const String HTML = "<!DOCTYPE html>
<html>
	<head>
        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=no, viewport-fit=cover\">
		
	</head>
	<body>
		<main>
			<input id=\"search\" type=\"text\" placeholder=\"Search\">
			<div id=\"drinkSelector\"></div>
			<button id=\"mixButton\">Mix!</button>
		</main>
		<script>const sheet$1 = new CSSStyleSheet();sheet$1.replaceSync(`:host {
	scroll-snap-align: center;
	transition: opacity 0.5s;
}

:host(:not(.selected)) {
	opacity: 0.4;
}

.mixer-container {
	width: 200px;
	height: 400px;
	position: relative;
}

.mixer-outline {
	--image: url(./mixer.svg);
}
.mixer-accents {
	--image: url(./mixerAccents.svg);
}
.mixer-outline, .mixer-accents {
	position: absolute;
	width: 100%;
	height: 100%;
	-webkit-mask-image: var(--image);
	mask-image: var(--image);
	background-color: white;
}

.name {
	text-align: center;
}

.ingredients-list {
	list-style: none;
	padding: 0;
	text-align: center;
}

li:not(.available) {
	color: rgb(225 165 222);
	text-decoration: line-through;
}
`);

// @ts-ignore

/**
 * @typedef DrinkDisplayIngredient
 * @property {string} name The name of the ingredient to display.
 * @property {boolean} available Whether the ingredient is available.
 */

class DrinkDisplay extends HTMLElement {
	#mixerContainerEl;
	#mixerAccentsImageEl;
	#nameEl;
	#ingredientsListEl;

	constructor() {
		super();

		const shadow = this.attachShadow({mode: \"open\"});
		shadow.adoptedStyleSheets = [sheet$1];

		this.#mixerContainerEl = document.createElement(\"div\");
		this.#mixerContainerEl.classList.add(\"mixer-container\");
		shadow.appendChild(this.#mixerContainerEl);

		const mixerOutlineEl = document.createElement(\"div\");
		mixerOutlineEl.classList.add(\"mixer-outline\");
		this.#mixerContainerEl.appendChild(mixerOutlineEl);

		this.#mixerAccentsImageEl = document.createElement(\"div\");
		this.#mixerAccentsImageEl.classList.add(\"mixer-accents\");
		this.#mixerContainerEl.appendChild(this.#mixerAccentsImageEl);

		this.#nameEl = document.createElement(\"h2\");
		this.#nameEl.classList.add(\"name\");
		shadow.appendChild(this.#nameEl);

		this.#ingredientsListEl = document.createElement(\"ul\");
		this.#ingredientsListEl.classList.add(\"ingredients-list\");
		shadow.appendChild(this.#ingredientsListEl);
	}

	get name() {
		return this.#nameEl.textContent || \"\";
	}

	set name(value) {
		this.#nameEl.textContent = value;
	}

	get color() {
		return this.#mixerAccentsImageEl.style.backgroundColor;
	}

	set color(value) {
		this.#mixerAccentsImageEl.style.backgroundColor = value;
	}

	/**
	 * @param {DrinkDisplayIngredient[]} value
	 */
	setIngredients(value) {
		while(this.#ingredientsListEl.firstChild) {
			this.#ingredientsListEl.removeChild(this.#ingredientsListEl.firstChild);
		}

		for (const ingredient of value) {
			const li = document.createElement(\"li\");
			li.textContent = ingredient.name;
			this.#ingredientsListEl.appendChild(li);
			li.classList.toggle(\"available\", ingredient.available);
		}
	}
}

/**
 * @fileoverview This file contains management of getting data by fetching
 * from the /get endpoint and caches the state in memory.
 * This also contains some utility functions for using the data.
 */

/**
 * @typedef ConfigJson
 * @property {DispenserConfigArr[]} dispensers
 * @property {import(\"./drinksConfig.js\").Ingredients[]} ingredients
 * @property {SettingsConfig} settings
 */

/**
 * @typedef ParsedConfigData
 * @property {DispenserConfig[]} dispensers
 * @property {SettingsConfig} settings
 */

/**
 * @typedef {[typeId: number, x: number, y: number, z: number, msMl: number, msOff: number, ingredientId: number]} DispenserConfigArr
 */

/**
 * @typedef DispenserConfig
 * @property {number} typeId
 * @property {number} x
 * @property {number} y
 * @property {number} z
 * @property {number} msMl
 * @property {number} msOff
 * @property {import(\"./drinksConfig.js\").Ingredients} ingredient
 */

/**
 * @typedef SettingsConfig
 * @property {boolean} homed
 * @property {boolean} disableSteppersAfterMixDone
 * @property {number} bedSizeX
 * @property {number} bedSizeY
 * @property {number} bedSizeZ
 * @property {number} manualX
 * @property {number} manualY
 * @property {number} motorMaxSpeed
 * @property {number} motorMaxAccel
 * @property {number} shotDispenserMl
 * @property {number} homeMaxSpeed
 * @property {number} homedistanceBounce
 * @property {number} naxGlassSize
 */

/** @type {ParsedConfigData?} */
let currentConfigData = null;
/** @type {Promise<void>?} */
let lastRefreshingConfigPromise = null;

/**
 * Returns the cached config if it exists, otherwise it loads the config first.
 */
async function getConfig() {
	if (!currentConfigData) {
		await refreshConfig();
	}
	if (!currentConfigData) {
		throw new Error(\"Failed to load config data.\");
	}
	return currentConfigData;
}

async function refreshConfig() {
	{
		lastRefreshingConfigPromise = refreshConfigFn();
	}
	return await lastRefreshingConfigPromise;
}

async function refreshConfigFn() {
	const response = await fetch(\"/get\");
	if (!response.ok) ; else {
		/** @type {ConfigJson} */
		const data = await response.json();
		/** @type {DispenserConfig[]} */
		const dispensers = [];
		for (const dispenser of data.dispensers) {
			dispensers.push({
				typeId: dispenser[0],
				x: dispenser[1],
				y: dispenser[2],
				z: dispenser[3],
				msMl: dispenser[4],
				msOff: dispenser[5],
				ingredient: data.ingredients[dispenser[6]]
			});
		}
		currentConfigData = {
			dispensers,
			settings: data.settings,
		};
	}
}

async function getAvailableIngredients() {
	const config = await getConfig();
	/** @type {Set<import(\"./drinksConfig.js\").Ingredients>} */
	let availableIngredients = new Set();
	for (const dispenser of config.dispensers) {
		availableIngredients.add(dispenser.ingredient);
	}
	return availableIngredients;
}

// This file is automatically generated.
// To make modifications update the values in 'The Big cocktail mixer machine sheet'
// and click tools -> export drinksConfig.js

/**
 * @typedef DrinkConfig
 * @property {string} name
 * @property {string} cssColor
 * @property {DrinkIngredientOrAction[]} actions
 */

/** @typedef {DrinkConfigIngredient | DrinkConfigAction} DrinkIngredientOrAction */

/**
 * @typedef DrinkConfigIngredient
 * @property {Ingredients} ingredient The ingredient to use.
 * @property {number} amount The amount in ml.
 */

/**
 * @typedef DrinkConfigAction
 * @property {Actions} action
 */

/** @typedef {\"VODKA\" | \"PEACH_TREE\" | \"ORANGE_JUICE\" | \"CRANBERRY_JUICE\" | \"TRIPLE_SEC\" | \"LIME_JUICE\" | \"PINEAPPLE_JUICE\" | \"GIN\" | \"LEMONADE\" | \"LEMON_JUICE\" | \"WHITE_RUM\" | \"RUM\" | \"TEQUILA\" | \"SIMPLE_SYRUP\" | \"TONIC_WATER\" | \"GINGER_ALE\" | \"GRENADINE_SYRUP\" | \"COLA\" | \"WATERMELON_VODKA\" | \"MILK\" | \"SPRITE\" | \"LEMON_SODA\"} Ingredients */

/** @typedef {\"ice\" | \"shake\" | \"stir\" | \"crushed ice\" | \"blend\" | \"strain\" | \"2 thee spoons of sugar\" | \"6 leaves of mind\"} Actions */

/** @type {DrinkConfig[]} */
const drinksConfig = [
	{
		name: \"Sex on the Beach\",
		cssColor: \"#bab34\",
		actions: [
			{action: \"ice\"},
			{ingredient: \"VODKA\", amount: 45},
			{ingredient: \"PEACH_TREE\", amount: 45},
			{ingredient: \"ORANGE_JUICE\", amount: 135},
			{action: \"shake\"},
			{ingredient: \"CRANBERRY_JUICE\", amount: 30},
		],
	}, {
		name: \"Screwdriver\",
		cssColor: \"#e8d86d\",
		actions: [
			{ingredient: \"VODKA\", amount: 45},
			{ingredient: \"ORANGE_JUICE\", amount: 120},
			{action: \"stir\"},
		],
	}, {
		name: \"Cosmopolitan Classic\",
		cssColor: \"#e81058\",
		actions: [
			{ingredient: \"VODKA\", amount: 23},
			{ingredient: \"TRIPLE_SEC\", amount: 15},
			{ingredient: \"CRANBERRY_JUICE\", amount: 30},
			{ingredient: \"LIME_JUICE\", amount: 15},
			{action: \"shake\"},
		],
	}, {
		name: \"Bay Breeze\",
		cssColor: \"#ff8400\",
		actions: [
			{ingredient: \"VODKA\", amount: 45},
			{ingredient: \"PINEAPPLE_JUICE\", amount: 30},
			{ingredient: \"CRANBERRY_JUICE\", amount: 30},
			{action: \"stir\"},
		],
	}, {
		name: \"Hole in One\",
		cssColor: \"#e3c532\",
		actions: [
			{action: \"ice\"},
			{ingredient: \"VODKA\", amount: 45},
			{ingredient: \"CRANBERRY_JUICE\", amount: 90},
			{action: \"stir\"},
			{ingredient: \"ORANGE_JUICE\", amount: 30},
		],
	}, {
		name: \"Gimlet\",
		cssColor: \"#d5f5dd\",
		actions: [
			{action: \"crushed ice\"},
			{ingredient: \"GIN\", amount: 90},
			{ingredient: \"LIME_JUICE\", amount: 30},
			{action: \"shake\"},
		],
	}, {
		name: \"Black widow\",
		cssColor: \"#800101\",
		actions: [
			{ingredient: \"VODKA\", amount: 30},
			{ingredient: \"CRANBERRY_JUICE\", amount: 30},
			{ingredient: \"LEMONADE\", amount: 30},
			{action: \"stir\"},
		],
	}, {
		name: \"Gin Sidecar\",
		cssColor: \"#ced190\",
		actions: [
			{action: \"crushed ice\"},
			{ingredient: \"GIN\", amount: 60},
			{ingredient: \"TRIPLE_SEC\", amount: 30},
			{ingredient: \"LEMON_JUICE\", amount: 30},
			{action: \"shake\"},
		],
	}, {
		name: \"Little Devil\",
		cssColor: \"#db4f40\",
		actions: [
			{action: \"crushed ice\"},
			{ingredient: \"WHITE_RUM\", amount: 45},
			{ingredient: \"TRIPLE_SEC\", amount: 30},
			{ingredient: \"LEMON_JUICE\", amount: 30},
			{action: \"shake\"},
		],
	}, {
		name: \"Hoola Hoop\",
		cssColor: \"#e3bc5b\",
		actions: [
			{ingredient: \"GIN\", amount: 45},
			{ingredient: \"ORANGE_JUICE\", amount: 30},
			{ingredient: \"PINEAPPLE_JUICE\", amount: 30},
			{action: \"stir\"},
		],
	}, {
		name: \"Hawaiian Cocktail\",
		cssColor: \"#edc766\",
		actions: [
			{ingredient: \"GIN\", amount: 60},
			{ingredient: \"TRIPLE_SEC\", amount: 15},
			{ingredient: \"PINEAPPLE_JUICE\", amount: 15},
			{action: \"shake\"},
		],
	}, {
		name: \"Alpine Lemonade\",
		cssColor: \"#f5e4bc\",
		actions: [
			{action: \"ice\"},
			{ingredient: \"VODKA\", amount: 30},
			{ingredient: \"GIN\", amount: 30},
			{ingredient: \"RUM\", amount: 30},
			{ingredient: \"LEMONADE\", amount: 60},
			{ingredient: \"CRANBERRY_JUICE\", amount: 60},
			{action: \"blend\"},
		],
	}, {
		name: \"Hula Hula\",
		cssColor: \"#baa165\",
		actions: [
			{action: \"crushed ice\"},
			{ingredient: \"GIN\", amount: 60},
			{ingredient: \"ORANGE_JUICE\", amount: 30},
			{ingredient: \"TRIPLE_SEC\", amount: 5},
			{action: \"stir\"},
			{action: \"strain\"},
		],
	}, {
		name: \"Judge J Cocktail\",
		cssColor: \"#ed775f\",
		actions: [
			{action: \"crushed ice\"},
			{ingredient: \"GIN\", amount: 60},
			{ingredient: \"WHITE_RUM\", amount: 60},
			{ingredient: \"LEMON_JUICE\", amount: 30},
			{ingredient: \"CRANBERRY_JUICE\", amount: 10},
			{action: \"shake\"},
			{action: \"strain\"},
		],
	}, {
		name: \"Rock Bottom\",
		cssColor: \"#f27157\",
		actions: [
			{ingredient: \"VODKA\", amount: 60},
			{ingredient: \"PINEAPPLE_JUICE\", amount: 10},
			{ingredient: \"GIN\", amount: 60},
			{ingredient: \"LEMON_JUICE\", amount: 10},
			{ingredient: \"LIME_JUICE\", amount: 10},
			{action: \"shake\"},
			{ingredient: \"TEQUILA\", amount: 60},
		],
	}, {
		name: \"Derby Daiquiri\",
		cssColor: \"#f7dd59\",
		actions: [
			{action: \"crushed ice\"},
			{ingredient: \"WHITE_RUM\", amount: 90},
			{ingredient: \"ORANGE_JUICE\", amount: 90},
			{ingredient: \"LIME_JUICE\", amount: 60},
			{ingredient: \"SIMPLE_SYRUP\", amount: 30},
			{action: \"blend\"},
		],
	}, {
		name: \"The Huntsman\",
		cssColor: \"#c9f097\",
		actions: [
			{ingredient: \"VODKA\", amount: 45},
			{ingredient: \"RUM\", amount: 15},
			{ingredient: \"LIME_JUICE\", amount: 23},
			{ingredient: \"SIMPLE_SYRUP\", amount: 8},
			{action: \"shake\"},
			{action: \"strain\"},
		],
	}, {
		name: \"Vodka Tonic\",
		cssColor: \"#f4f5f2\",
		actions: [
			{action: \"ice\"},
			{ingredient: \"VODKA\", amount: 60},
			{ingredient: \"TONIC_WATER\", amount: 120},
			{action: \"stir\"},
		],
	}, {
		name: \"Beach Bum Shake\",
		cssColor: \"#e3a452\",
		actions: [
			{action: \"crushed ice\"},
			{ingredient: \"TEQUILA\", amount: 30},
			{ingredient: \"ORANGE_JUICE\", amount: 60},
			{ingredient: \"VODKA\", amount: 8},
			{ingredient: \"TRIPLE_SEC\", amount: 5},
			{action: \"shake\"},
			{action: \"strain\"},
		],
	}, {
		name: \"Gin Buck\",
		cssColor: \"#f0ede9\",
		actions: [
			{action: \"ice\"},
			{ingredient: \"GIN\", amount: 60},
			{ingredient: \"LEMON_JUICE\", amount: 30},
			{ingredient: \"GINGER_ALE\", amount: 30},
			{action: \"stir\"},
		],
	}, {
		name: \"Pussy popper\",
		cssColor: \"#db5740\",
		actions: [
			{action: \"ice\"},
			{ingredient: \"VODKA\", amount: 90},
			{ingredient: \"TRIPLE_SEC\", amount: 60},
			{ingredient: \"CRANBERRY_JUICE\", amount: 60},
			{ingredient: \"ORANGE_JUICE\", amount: 60},
			{ingredient: \"GRENADINE_SYRUP\", amount: 5},
			{action: \"shake\"},
		],
	}, {
		name: \"Brass Monkey\",
		cssColor: \"#f5b922\",
		actions: [
			{ingredient: \"RUM\", amount: 15},
			{ingredient: \"VODKA\", amount: 15},
			{action: \"stir\"},
			{ingredient: \"ORANGE_JUICE\", amount: 120},
			{action: \"shake\"},
		],
	}, {
		name: \"Legspreader\",
		cssColor: \"#f0ecd5\",
		actions: [
			{ingredient: \"TEQUILA\", amount: 30},
			{ingredient: \"VODKA\", amount: 30},
			{ingredient: \"GIN\", amount: 30},
			{ingredient: \"RUM\", amount: 30},
			{action: \"shake\"},
		],
	}, {
		name: \"Leap Frog Highball\",
		cssColor: \"#f0ebd1\",
		actions: [
			{action: \"ice\"},
			{ingredient: \"GIN\", amount: 60},
			{ingredient: \"LEMON_JUICE\", amount: 45},
			{ingredient: \"GINGER_ALE\", amount: 60},
			{action: \"stir\"},
		],
	}, {
		name: \"Vodka Sour\",
		cssColor: \"#edeadd\",
		actions: [
			{action: \"ice\"},
			{ingredient: \"VODKA\", amount: 45},
			{ingredient: \"LEMON_JUICE\", amount: 23},
			{ingredient: \"SIMPLE_SYRUP\", amount: 13},
			{action: \"shake\"},
		],
	}, {
		name: \"Orange Buck\",
		cssColor: \"#e8d997\",
		actions: [
			{action: \"ice\"},
			{ingredient: \"GIN\", amount: 60},
			{ingredient: \"ORANGE_JUICE\", amount: 60},
			{ingredient: \"LIME_JUICE\", amount: 30},
			{action: \"shake\"},
			{ingredient: \"GINGER_ALE\", amount: 60},
			{action: \"stir\"},
		],
	}, {
		name: \"Liquid Bubble Gum\",
		cssColor: \"#FFFFFF\",
		actions: [
			{ingredient: \"VODKA\", amount: 60},
			{ingredient: \"PEACH_TREE\", amount: 60},
			{ingredient: \"COLA\", amount: 120},
			{action: \"stir\"},
		],
	}, {
		name: \"Desert Sunrise\",
		cssColor: \"#FFFFFF\",
		actions: [
			{action: \"crushed ice\"},
			{ingredient: \"VODKA\", amount: 38},
			{ingredient: \"ORANGE_JUICE\", amount: 45},
			{ingredient: \"PINEAPPLE_JUICE\", amount: 45},
			{ingredient: \"GRENADINE_SYRUP\", amount: 5},
			{action: \"stir\"},
		],
	}, {
		name: \"Absolute Vacation\",
		cssColor: \"#FFFFFF\",
		actions: [
			{action: \"ice\"},
			{ingredient: \"CRANBERRY_JUICE\", amount: 30},
			{ingredient: \"ORANGE_JUICE\", amount: 30},
			{ingredient: \"PINEAPPLE_JUICE\", amount: 30},
			{ingredient: \"VODKA\", amount: 30},
			{action: \"shake\"},
		],
	}, {
		name: \"Hawaiian Seduction\",
		cssColor: \"#FFFFFF\",
		actions: [
			{action: \"ice\"},
			{ingredient: \"TEQUILA\", amount: 30},
			{ingredient: \"LIME_JUICE\", amount: 180},
			{ingredient: \"VODKA\", amount: 30},
			{action: \"stir\"},
		],
	}, {
		name: \"Hawaiian Sea Breeze\",
		cssColor: \"#FFFFFF\",
		actions: [
			{action: \"ice\"},
			{ingredient: \"VODKA\", amount: 45},
			{ingredient: \"PINEAPPLE_JUICE\", amount: 135},
			{ingredient: \"CRANBERRY_JUICE\", amount: 10},
			{action: \"stir\"},
		],
	}, {
		name: \"Asian Cum Shot\",
		cssColor: \"#FFFFFF\",
		actions: [
			{action: \"ice\"},
			{ingredient: \"WATERMELON_VODKA\", amount: 90},
			{ingredient: \"ORANGE_JUICE\", amount: 180},
			{action: \"stir\"},
		],
	}, {
		name: \"Island Punch\",
		cssColor: \"#FFFFFF\",
		actions: [
			{action: \"ice\"},
			{ingredient: \"WHITE_RUM\", amount: 30},
			{ingredient: \"GRENADINE_SYRUP\", amount: 5},
			{ingredient: \"ORANGE_JUICE\", amount: 120},
			{ingredient: \"PINEAPPLE_JUICE\", amount: 120},
			{action: \"stir\"},
		],
	}, {
		name: \"Jamaican Sunrise\",
		cssColor: \"#FFFFFF\",
		actions: [
			{ingredient: \"ORANGE_JUICE\", amount: 135},
			{ingredient: \"VODKA\", amount: 60},
			{ingredient: \"PEACH_TREE\", amount: 60},
			{action: \"shake\"},
			{ingredient: \"CRANBERRY_JUICE\", amount: 30},
		],
	}, {
		name: \"Montana Sunrise\",
		cssColor: \"#FFFFFF\",
		actions: [
			{action: \"ice\"},
			{ingredient: \"GRENADINE_SYRUP\", amount: 23},
			{ingredient: \"ORANGE_JUICE\", amount: 60},
			{ingredient: \"VODKA\", amount: 120},
			{action: \"shake\"},
			{action: \"strain\"},
		],
	}, {
		name: \"Pimp Daddy\",
		cssColor: \"#FFFFFF\",
		actions: [
			{action: \"ice\"},
			{ingredient: \"TEQUILA\", amount: 60},
			{ingredient: \"VODKA\", amount: 60},
			{ingredient: \"LEMON_JUICE\", amount: 30},
			{ingredient: \"CRANBERRY_JUICE\", amount: 90},
			{action: \"stir\"},
		],
	}, {
		name: \"Adam Cocktail\",
		cssColor: \"#FFFFFF\",
		actions: [
			{action: \"ice\"},
			{ingredient: \"RUM\", amount: 60},
			{ingredient: \"LEMON_JUICE\", amount: 30},
			{ingredient: \"GRENADINE_SYRUP\", amount: 30},
			{action: \"shake\"},
			{action: \"strain\"},
		],
	}, {
		name: \"Long Island Taxi\",
		cssColor: \"#FFFFFF\",
		actions: [
			{action: \"ice\"},
			{ingredient: \"VODKA\", amount: 60},
			{ingredient: \"GIN\", amount: 30},
			{ingredient: \"TEQUILA\", amount: 30},
			{ingredient: \"RUM\", amount: 30},
			{ingredient: \"ORANGE_JUICE\", amount: 60},
			{action: \"shake\"},
			{action: \"strain\"},
		],
	}, {
		name: \"Caribe Cosmopolitan\",
		cssColor: \"#FFFFFF\",
		actions: [
			{action: \"ice\"},
			{ingredient: \"RUM\", amount: 45},
			{ingredient: \"CRANBERRY_JUICE\", amount: 30},
			{ingredient: \"TRIPLE_SEC\", amount: 30},
			{ingredient: \"LIME_JUICE\", amount: 15},
			{action: \"shake\"},
		],
	}, {
		name: \"Key West Screwdriver\",
		cssColor: \"#FFFFFF\",
		actions: [
			{ingredient: \"VODKA\", amount: 60},
			{ingredient: \"LIME_JUICE\", amount: 30},
			{ingredient: \"ORANGE_JUICE\", amount: 150},
			{action: \"stir\"},
		],
	}, {
		name: \"Shark Tank\",
		cssColor: \"#FFFFFF\",
		actions: [
			{ingredient: \"LEMONADE\", amount: 120},
			{ingredient: \"VODKA\", amount: 120},
			{ingredient: \"GRENADINE_SYRUP\", amount: 60},
		],
	}, {
		name: \"A Gilligans Island\",
		cssColor: \"#FFFFFF\",
		actions: [
			{ingredient: \"VODKA\", amount: 30},
			{ingredient: \"PEACH_TREE\", amount: 30},
			{ingredient: \"ORANGE_JUICE\", amount: 90},
			{ingredient: \"CRANBERRY_JUICE\", amount: 90},
			{action: \"shake\"},
		],
	}, {
		name: \"Blind Bat\",
		cssColor: \"#FFFFFF\",
		actions: [
			{ingredient: \"VODKA\", amount: 120},
			{ingredient: \"COLA\", amount: 120},
			{ingredient: \"WHITE_RUM\", amount: 10},
			{action: \"stir\"},
		],
	}, {
		name: \"Hot Sex Cocktail\",
		cssColor: \"#FFFFFF\",
		actions: [
			{action: \"ice\"},
			{ingredient: \"TRIPLE_SEC\", amount: 75},
			{ingredient: \"ORANGE_JUICE\", amount: 120},
			{action: \"stir\"},
			{ingredient: \"GRENADINE_SYRUP\", amount: 10},
		],
	}, {
		name: \"Bloody Nightmare\",
		cssColor: \"#FFFFFF\",
		actions: [
			{action: \"ice\"},
			{ingredient: \"VODKA\", amount: 30},
			{ingredient: \"LIME_JUICE\", amount: 60},
			{ingredient: \"CRANBERRY_JUICE\", amount: 210},
			{action: \"stir\"},
		],
	}, {
		name: \"Snoop Dogg\",
		cssColor: \"#FFFFFF\",
		actions: [
			{ingredient: \"GIN\", amount: 60},
			{ingredient: \"ORANGE_JUICE\", amount: 90},
			{action: \"stir\"},
		],
	}, {
		name: \"Gin Citric\",
		cssColor: \"#FFFFFF\",
		actions: [
			{action: \"ice\"},
			{ingredient: \"GIN\", amount: 60},
			{ingredient: \"GRENADINE_SYRUP\", amount: 5},
			{ingredient: \"LEMON_JUICE\", amount: 30},
			{ingredient: \"LIME_JUICE\", amount: 30},
			{ingredient: \"ORANGE_JUICE\", amount: 60},
			{action: \"stir\"},
		],
	}, {
		name: \"Cat Cocktail\",
		cssColor: \"#FFFFFF\",
		actions: [
			{action: \"ice\"},
			{ingredient: \"VODKA\", amount: 45},
			{ingredient: \"TRIPLE_SEC\", amount: 15},
			{ingredient: \"CRANBERRY_JUICE\", amount: 120},
			{action: \"stir\"},
		],
	}, {
		name: \"Hard Dick\",
		cssColor: \"#FFFFFF\",
		actions: [
			{ingredient: \"VODKA\", amount: 30},
			{ingredient: \"GIN\", amount: 30},
			{ingredient: \"WHITE_RUM\", amount: 30},
			{action: \"stir\"},
			{ingredient: \"SPRITE\", amount: 90},
		],
	}, {
		name: \"Vodka soda\",
		cssColor: \"#964B00\",
		actions: [
			{action: \"ice\"},
			{ingredient: \"VODKA\", amount: 60},
			{ingredient: \"COLA\", amount: 240},
		],
	}, {
		name: \"Rum and coke\",
		cssColor: \"#964B00\",
		actions: [
			{ingredient: \"COLA\", amount: 120},
			{ingredient: \"WHITE_RUM\", amount: 50},
			{ingredient: \"LIME_JUICE\", amount: 10},
		],
	}, {
		name: \"Long island iced tea\",
		cssColor: \"#FFFFFF\",
		actions: [
			{ingredient: \"SIMPLE_SYRUP\", amount: 30},
			{ingredient: \"TEQUILA\", amount: 15},
			{ingredient: \"WHITE_RUM\", amount: 15},
			{ingredient: \"LEMON_JUICE\", amount: 30},
			{ingredient: \"TRIPLE_SEC\", amount: 15},
			{ingredient: \"COLA\", amount: 45},
			{ingredient: \"GIN\", amount: 15},
			{ingredient: \"VODKA\", amount: 15},
		],
	}, {
		name: \"Daiquiri\",
		cssColor: \"#FFFFFF\",
		actions: [
			{ingredient: \"WHITE_RUM\", amount: 45},
			{ingredient: \"LIME_JUICE\", amount: 30},
			{ingredient: \"SIMPLE_SYRUP\", amount: 15},
		],
	}, {
		name: \"Margarita\",
		cssColor: \"#42F595\",
		actions: [
			{ingredient: \"TRIPLE_SEC\", amount: 30},
			{ingredient: \"LIME_JUICE\", amount: 30},
			{ingredient: \"TEQUILA\", amount: 60},
		],
	}, {
		name: \"Mojito\",
		cssColor: \"#9DFF85\",
		actions: [
			{ingredient: \"WHITE_RUM\", amount: 45},
			{ingredient: \"LIME_JUICE\", amount: 30},
			{action: \"2 thee spoons of sugar\"},
			{action: \"6 leaves of mind\"},
			{ingredient: \"LEMON_SODA\", amount: 105},
		],
	}, {
		name: \"Gin and tonic\",
		cssColor: \"#D4D2D2\",
		actions: [
			{ingredient: \"GIN\", amount: 30},
			{ingredient: \"TONIC_WATER\", amount: 90},
		],
	}
];

const search = document.getElementById(\"search\");
const searchEl = /** @type {HTMLInputElement} */ (search);

const drinkSelector = document.getElementById(\"drinkSelector\");
const drinkSelectorEl = /** @type {HTMLDivElement} */ (drinkSelector);

document.getElementById(\"customizeButton\");

const mixButton = document.getElementById(\"mixButton\");
const mixButtonEl = /** @type {HTMLButtonElement} */ (mixButton);

/**
 * @typedef DrinkData
 * @property {import(\"./drinksConfig.js\").DrinkConfig} config
 * @property {boolean} allIngredientsAvailable
 * @property {DrinkDisplay} el
 */

/** @type {Map<DrinkDisplay, DrinkData>} */
const createdDrinks = new Map();

/** @type {Set<DrinkDisplay>} */
const visibleDrinks = new Set();

const intersectionObserver = new IntersectionObserver(entries => {
	for (const entry of entries) {
		entry.target.classList.toggle(\"selected\", entry.isIntersecting);
		if (!(entry.target instanceof DrinkDisplay)) throw new Error(\"Assertion failed\");
		if (entry.isIntersecting) {
			visibleDrinks.add(entry.target);
		} else {
			visibleDrinks.delete(entry.target);
		}
	}
}, {
	threshold: 1,
	root: drinkSelectorEl,
});

function initDrinkSelector() {
	for (const drinkConfig of drinksConfig) {
		const {name, cssColor} = drinkConfig;
		const drinkDisplayHtmlElement = document.createElement(\"drink-display\");
		const drinkDisplay = /** @type {DrinkDisplay} */ (drinkDisplayHtmlElement);
		drinkDisplay.name = name;
		drinkDisplay.color = cssColor;
		drinkSelectorEl.appendChild(drinkDisplayHtmlElement);
		createdDrinks.set(drinkDisplay, {
			config: drinkConfig,
			allIngredientsAvailable: false,
			el: drinkDisplay,
		});
		intersectionObserver.observe(drinkDisplay);
	}

	updateDrinkIngredients();
}

async function updateDrinkIngredients() {
	const availableIngredients = await getAvailableIngredients();
	for (const [el, drinkData] of createdDrinks) {
		const ingredients = [];
		let allIngredientsAvailable = true;
		for (const action of drinkData.config.actions) {
			if (\"ingredient\" in action) {
				const available = availableIngredients.has(action.ingredient);
				ingredients.push({
					name: action.ingredient,
					available,
				});
				if (!available) allIngredientsAvailable = false;
			}
		}
		drinkData.allIngredientsAvailable = allIngredientsAvailable;
		el.setIngredients(ingredients);
	}

	sortDrinkElements();
}

function sortDrinkElements() {
	while (drinkSelectorEl.firstChild) {
		drinkSelectorEl.removeChild(drinkSelectorEl.firstChild);
	}
	const sortedDrinks = Array.from(createdDrinks.values());
	sortedDrinks.sort((a, b) => {
		if (a.allIngredientsAvailable && !b.allIngredientsAvailable) return -1;
		if (!a.allIngredientsAvailable && b.allIngredientsAvailable) return 1;
		return a.config.name.localeCompare(b.config.name);
	});

	for (const drinkData of sortedDrinks) {
		drinkSelectorEl.appendChild(drinkData.el);
	}
}

function getSelectedDrink() {
	const selectorBounds = drinkSelectorEl.getBoundingClientRect();
	const selectorCenter = selectorBounds.left + selectorBounds.width / 2;

	let centerDrink = null;
	let closestCenterDist = Infinity;
	for (const drink of visibleDrinks) {
		const bounds = drink.getBoundingClientRect();
		const center = bounds.left + bounds.width / 2;
		const centerDist = Math.abs(center - selectorCenter);
		if (centerDist < closestCenterDist) {
			closestCenterDist = centerDist;
			centerDrink = drink;
		}
	}

	if (!centerDrink) throw new Error(\"No drink selected\");
	const data = createdDrinks.get(centerDrink);
	if (!data) throw new Error(\"No config for selected drink\");
	return data;
}

/**
 * @param {string} filter
 */
function setDrinkFilter(filter) {
	filter = filter.toLocaleLowerCase().trim();
	for (const drinkEl of createdDrinks.keys()) {
		let visible = true;
		if (filter) {
			visible = drinkEl.name.toLocaleLowerCase().includes(filter);
		}
		drinkEl.style.display = visible ? \"\" : \"none\";
	}
}

const sheet = new CSSStyleSheet();sheet.replaceSync(`html, body, main {
	width: 100%;
	height: 100%;
	margin: 0;
}

body {
	background: radial-gradient(circle at 50% 110%, #da5dff 0%, #5f007b 40%, #1f0028 70%, black 100%);
	color: white;
	font-family: sans-serif;
}

main {
	display: flex;
	flex-direction: column;
	align-items: center;
}

#drinkSelector {
	display: flex;
	max-width: 400px;
	width: 100%;
	overflow-x: scroll;
	scroll-snap-type: x mandatory;
	margin: auto;
}

@media (max-width: 600px) {
	#drinkSelector {
		margin: 0;
		max-width: 100%;
	}
}
@media (min-width: 400px) {
	#drinkSelector {
		--mask: linear-gradient(to right, transparent 0%, black 25%, black 75%, transparent 100%);
		-webkit-mask-image: var(--mask);
		mask-image: var(--mask);
	}
}

#drinkSelector::before,
#drinkSelector::after {
	content: \"\";
	width: 100%;
	height: 100%;
	flex-shrink: 0;
}

input[type=\"text\"] {
	appearance: none;
	border: none;
	background: #51515157;
	border-radius: 5px;
	border-bottom: solid #7b7b7b33 1px;
	box-shadow: inset 0px 9px 9px -6px #00000029;
}

#search {
	font-size: 20pt;
	text-align: center;
	margin: 30px;
	max-width: calc(100% - 60px);
	color: white;
}
#search:focus-visible {
	outline: none;
	background: #63636357;
	box-shadow: #ffffff1c 0px 0px 20px;
}

#mixButton {
	border: none;
	appearance: none;
	font-size: 30pt;
	color: white;
	padding: 5px 40px;
	background: linear-gradient(#ec15aa, #da0097);
	margin: 20px;
	border-radius: 5px;
	box-shadow: #e35bd6 0px -1px, #690079 0px 5px, #0000005e 0px 11px 6px -2px, #00000045 0px 21px 20px 4px;
	cursor: pointer;
}

#mixButton:hover {
	background: radial-gradient(#ff7bd6, #e316a4);
	box-shadow: #ff44ba29 0px 0px 20px 15px, #e35bd6 0px -1px, #8c0082 0px 5px, #0000005e 0px 11px 6px -2px, #00000045 0px 21px 20px 4px;
}

#mixButton:active {
	background: linear-gradient(#ca1291, #b7027f);
	box-shadow: #e35bd6 0px -1px, #740059 0px 5px, #0000005e 0px 11px 6px -2px, #00000045 0px 21px 20px 4px;
}
`);

/**
 * @param {Object} options
 * @param {string} options.name The name to display on the device.
 * @param {import(\"./drinksConfig.js\").DrinkIngredientOrAction[]} options.actions
 */
async function sendMixRequest({
	name,
	actions,
}) {
	const url = new URL(\"/set\", window.location.href);
	url.searchParams.set(\"n\", name);
	for (const [i, action] of actions.entries()) {
		const queryIndex = i + 1;
		if (\"ingredient\" in action) {
			url.searchParams.set(\"ai\" + queryIndex, action.ingredient);
			url.searchParams.set(\"am\" + queryIndex, String(action.amount));
		} else {
			url.searchParams.set(\"aa\" + queryIndex, \"#\" + action.action);
		}
	}
	const response = await fetch(url.href);
	if (!response.ok) ;
}

document.adoptedStyleSheets = [sheet];

customElements.define(\"drink-display\", DrinkDisplay);

mixButtonEl.addEventListener(\"click\", () => {
	const selectedDrink = getSelectedDrink();
	const config = selectedDrink.config;
	sendMixRequest({
		name: config.name,
		actions: config.actions,
	});
});

initDrinkSelector();

searchEl.addEventListener(\"input\", () => {
	setDrinkFilter(searchEl.value);
});
</script><!--inline main.js inject position-->
	</body>
</html>
";
